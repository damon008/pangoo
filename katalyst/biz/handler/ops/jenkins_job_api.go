// Code generated by hertz generator.

package ops

import (
	"context"

	jenkins_service "pangoo/katalyst/biz/service/ops"

	"github.com/cloudwego/hertz/pkg/app"
	"github.com/cloudwego/hertz/pkg/protocol/consts"

	"pangoo/katalyst/biz/model/ops"
)

// CreateView .
// @Summary 创建View
// @Accept application/json
// @Tags jenkins操作
// @Author Damon.Wang
// @Produce application/json
// @Content application/json
// @Param view body ops.BaseReq true "view，所属视图"
// @Success 200 {object} ops.BaseResp
// @Failure 400 {object} ops.BaseResp
// @Failure 403 {object} ops.BaseResp
// @Failure 500 {object} ops.BaseResp
// @router /api/v1/createView [POST]
func CreateView(ctx context.Context, c *app.RequestContext) {
	var err error
	var req ops.BaseReq
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp, err := jenkins_service.CreateView(req.Department + "_" + req.Product)

	c.JSON(consts.StatusOK, resp)
}

// DeleteView .
// @Summary 删除View
// @Accept application/json
// @Tags jenkins操作
// @Author Damon.Wang
// @Produce application/json
// @Content application/json
// @Param view body jenkins.BaseReq true "view，所属视图"
// @Success 200 {object} ops.BaseResp
// @Failure 400 {object} ops.BaseResp
// @Failure 403 {object} ops.BaseResp
// @Failure 500 {object} ops.BaseResp
// @router /api/v1/deleteView [DELETE]
/*func DeleteView(ctx context.Context, c *app.RequestContext) {
	var err error
	var req ops.BaseReq
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp, err := jenkins_service.DeleteView(req.Department + "_" + req.Product)

	c.JSON(consts.StatusOK, resp)
}*/

// DeployApp .
// @Summary 部署应用
// @Accept application/json
// @Tags jenkins操作
// @Author Damon.Wang
// @Produce application/json
// @Content application/json
// @Param job body ops.AppDeployReq true "job，构建、部署所需要的信息"
// @Success 200 {object} ops.BaseResp
// @Failure 400 {object} ops.BaseResp
// @Failure 403 {object} ops.BaseResp
// @Failure 500 {object} ops.BaseResp
// @router /api/v1/deployApp [POST]
func DeployApp(ctx context.Context, c *app.RequestContext) {
	var err error
	var req ops.AppDeployReq
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp, _ := jenkins_service.DeployApp(&req)

	c.JSON(consts.StatusOK, resp)
}

// UpdateApp .
// @Summary 更新应用，更改cpu内存limit、伸缩pod
// @Accept application/json
// @Tags jenkins操作
// @Author Chambers.Qi
// @Produce application/json
// @Content application/json
// @Param job body ops.AppDeployReq true "job，构建、部署所需要的信息"
// @Success 200 {object} ops.BaseResp
// @Failure 400 {object} ops.BaseResp
// @Failure 403 {object} ops.BaseResp
// @Failure 500 {object} ops.BaseResp
// @router /api/v1/updateApp [POST]
func UpdateApp(ctx context.Context, c *app.RequestContext) {
	var err error
	var req ops.AppDeployReq
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp, _ := jenkins_service.UpdateApp(&req)

	c.JSON(consts.StatusOK, resp)
}

// RestartApp .
// @Summary 重启应用
// @Accept application/json
// @Tags jenkins操作
// @Author Chambers.Qi
// @Produce application/json
// @Content application/json
// @Param job body ops.AppDeployReq true "job，构建、部署所需要的信息"
// @Success 200 {object} ops.BaseResp
// @Failure 400 {object} ops.BaseResp
// @Failure 403 {object} ops.BaseResp
// @Failure 500 {object} ops.BaseResp
// @router /api/v1/restartApp [POST]
func RestartApp(ctx context.Context, c *app.RequestContext) {
	var err error
	var req ops.AppDeployReq
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp, _ := jenkins_service.RestartApp(&req)

	c.JSON(consts.StatusOK, resp)
}

// RollbackApp .
// @Summary 回滚应用，默认至上一版本
// @Accept application/json
// @Tags jenkins操作
// @Author Chambers.Qi
// @Produce application/json
// @Content application/json
// @Param job body ops.AppDeployReq true "job，构建、部署所需要的信息"
// @Success 200 {object} ops.BaseResp
// @Failure 400 {object} ops.BaseResp
// @Failure 403 {object} ops.BaseResp
// @Failure 500 {object} ops.BaseResp
// @router /api/v1/rollbackApp [POST]
func RollbackApp(ctx context.Context, c *app.RequestContext) {
	var err error
	var req ops.AppDeployReq
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp, _ := jenkins_service.RollbackApp(&req)

	c.JSON(consts.StatusOK, resp)
}

// DeleteJob .
// @Summary 删除Job
// @Accept application/json
// @Tags jenkins操作
// @Author Damon.Wang
// @Produce application/json
// @Content application/json
// @Param job body ops.JobReq true "job"
// @Success 200 {object} ops.BaseResp
// @Failure 400 {object} ops.BaseResp
// @Failure 403 {object} ops.BaseResp
// @Failure 500 {object} ops.BaseResp
// @router /api/v1/deleteJob [DELETE]
func DeleteJob(ctx context.Context, c *app.RequestContext) {
	var err error
	var req ops.JobReq
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp, err := jenkins_service.DeleteJob(&req)

	c.JSON(consts.StatusOK, resp)
}

// BuildLog .
// @Summary 查看构建日志
// @Accept application/json
// @Tags jenkins操作
// @Author Damon.Wang
// @Produce application/json
// @Content application/json
// @Param job body ops.JobReq true "job"
// @Success 200 {object} ops.BaseResp
// @Failure 400 {object} ops.BaseResp
// @Failure 403 {object} ops.BaseResp
// @Failure 500 {object} ops.BaseResp
// @router /api/v1/buildLog [POST]
/*func BuildLog(ctx context.Context, c *app.RequestContext) {
	var err error
	var req ops.JobReq
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp, err := jenkins_service.BuildLog(&req)

	c.JSON(consts.StatusOK, resp)
}*/
